@page "/"
@using BlazorTodoMvc.Client.Services
@using BlazorTodoMvc.Shared.Models
@inject ITodosService TodosService

<header class="header">
    <h1>todos</h1>
    <AddTodo AddItemAction="@AddItem" />
</header>

@if (Todos.Any())
{
    <section class="main">
        <input id="toggle-all" class="toggle-all" type="checkbox" />
        <label for="toggle-all">Mark all complete</label>
        <ul class="todo-list">
            @foreach (var todo in Todos)
            {
                <TodoListItem Todo="@todo" DeleteAction="@Delete" UpdateAction="@Update"></TodoListItem>
            }
        </ul>
    </section>

    <footer class="footer">
        <span class="todo-count"><strong>@GetRemainingCount() </strong>@(GetRemainingCount() == 0 || GetRemainingCount() > 1 ? "items" : "item") left</span>
        <button class="clear-completed">Clear completed</button>
    </footer>

}

@functions {
public IList<TodoItem> Todos = new List<TodoItem>();

protected override async Task OnInitAsync()
{
    Todos = await TodosService.GetTodosAsync();
}

void AddItem(TodoItem todo)
{
    Todos.Add(todo);
    StateHasChanged();
    TodosService.PostTodoAsync(todo);
}

void Update(TodoItem todo)
{
    StateHasChanged();
    TodosService.PutTodoAsync(todo);
}


void Delete(TodoItem todo)
{
    Todos.Remove(todo);
    StateHasChanged();
    TodosService.DeleteAsync(todo);
}

int GetRemainingCount()
{
    return Todos.Count(item => !item.Completed);
}
}